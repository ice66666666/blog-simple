services:
  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: blog_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - blog_network

  # Backend Flask
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: blog_backend
    environment:
      - FLASK_APP=${FLASK_APP}
      - FLASK_ENV=${FLASK_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    depends_on:
      - db
    networks:
      - blog_network
    restart: unless-stopped

  # Frontend React (FIX)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blog_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app         # monta todo el código
      - /app/node_modules       # volumen anónimo para deps
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - HOST=0.0.0.0
      - PORT=3000
      - REACT_APP_API_URL=http://backend:5000
    depends_on:
      - backend
    networks:
      - blog_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  blog_network:
    driver: bridge
